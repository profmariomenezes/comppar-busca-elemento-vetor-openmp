##<Codigo Fonte>
// Pedro H Garcia - 31977731 - Computaçao Paralela - Buscando um elemento com OpenMP

#include <stdio.h>
#include <stdlib.h>
#include <omp.h>
#include <time.h>

#define MAX_SIZE 65536

int main() {
    int n, NTHREADS, tid = -1;
    srand(time(NULL));
    int r = rand();
    int arr[MAX_SIZE];
    int size = MAX_SIZE, i, toSearch, c = 0;


    for(i=0; i<size; i++)
    {
        arr[i] = r;
        r = rand();
    }
     for(i=0; i<size; i++)
    {
        printf("%d\n", arr[i]);
    }
    
    
    printf("\nDigite elemento para buscar: ");
    scanf("%d", &toSearch);



    #pragma omp parallel 
    {
        tid = omp_get_thread_num();
            
        for (i = tid; i < size+1; i+=6){
            if (arr[i] == toSearch){
                if (c < 1){
                    printf("\n >>> %d encontrado na posicao %d pela thread %d\n", toSearch, i, tid);
                    c++;
                }
            }
        }
    }
    
    if (c < 1) {
        printf("\nElemento nao encontrado.\n");
    }

    return 0;
}

-----------------------------------------------------
##<Prints de execução>
![Imagem](https://uploaddeimagens.com.br/imagens/Ug0H5G8)
![Imagem](https://uploaddeimagens.com.br/imagens/rGBaJJQ)
![Imagem](https://uploaddeimagens.com.br/imagens/dpV0lIc)
